{"ast":null,"code":"import _curry3 from './internal/_curry3.js';\n/**\r\n * Tests the final argument by passing it to the given predicate function. If\r\n * the predicate is not satisfied, the function will return the result of\r\n * calling the `whenFalseFn` function with the same argument. If the predicate\r\n * is satisfied, the argument is returned as is.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.18.0\r\n * @category Logic\r\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\r\n * @param {Function} pred        A predicate function\r\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\r\n *                               to a falsy value.\r\n * @param {*}        x           An object to test with the `pred` function and\r\n *                               pass to `whenFalseFn` if necessary.\r\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\r\n * @see R.ifElse, R.when, R.cond\r\n * @example\r\n *\r\n *      let safeInc = R.unless(R.isNil, R.inc);\r\n *      safeInc(null); //=> null\r\n *      safeInc(1); //=> 2\r\n */\n\nvar unless = /*#__PURE__*/_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nexport default unless;","map":null,"metadata":{},"sourceType":"module"}