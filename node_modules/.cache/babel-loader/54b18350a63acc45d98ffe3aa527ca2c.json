{"ast":null,"code":"import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\n/**\r\n * Applies a function to the value at the given index of an array, returning a\r\n * new copy of the array with the element at the given index replaced with the\r\n * result of the function application.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.14.0\r\n * @category List\r\n * @sig Number -> (a -> a) -> [a] -> [a]\r\n * @param {Number} idx The index.\r\n * @param {Function} fn The function to apply.\r\n * @param {Array|Arguments} list An array-like object whose value\r\n *        at the supplied index will be replaced.\r\n * @return {Array} A copy of the supplied array-like object with\r\n *         the element at index `idx` replaced with the value\r\n *         returned by applying `fn` to the existing element.\r\n * @see R.update\r\n * @example\r\n *\r\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\r\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\r\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\r\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\r\n */\n\nvar adjust = /*#__PURE__*/_curry3(function adjust(idx, fn, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n\n  var start = idx < 0 ? list.length : 0;\n\n  var _idx = start + idx;\n\n  var _list = _concat(list);\n\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\nexport default adjust;","map":null,"metadata":{},"sourceType":"module"}