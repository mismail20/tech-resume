{"ast":null,"code":"import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry3 from './internal/_curry3.js';\n/**\r\n * Returns the elements of the given list or string (or object with a `slice`\r\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\r\n *\r\n * Dispatches to the `slice` method of the third argument, if present.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.4\r\n * @category List\r\n * @sig Number -> Number -> [a] -> [a]\r\n * @sig Number -> Number -> String -> String\r\n * @param {Number} fromIndex The start index (inclusive).\r\n * @param {Number} toIndex The end index (exclusive).\r\n * @param {*} list\r\n * @return {*}\r\n * @example\r\n *\r\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\r\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\r\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\r\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\r\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\r\n */\n\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;","map":null,"metadata":{},"sourceType":"module"}