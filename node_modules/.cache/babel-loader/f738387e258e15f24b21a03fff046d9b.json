{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n/**\r\n * Creates a new object with the own properties of the first object merged with\r\n * the own properties of the second object. If a key exists in both objects:\r\n * - and both values are objects, the two values will be recursively merged\r\n * - otherwise the value from the second object will be used.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.24.0\r\n * @category Object\r\n * @sig {a} -> {a} -> {a}\r\n * @param {Object} lObj\r\n * @param {Object} rObj\r\n * @return {Object}\r\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\r\n * @example\r\n *\r\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\r\n *                       { age: 40, contact: { email: 'baa@example.com' }});\r\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\r\n */\n\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepRight;","map":null,"metadata":{},"sourceType":"module"}