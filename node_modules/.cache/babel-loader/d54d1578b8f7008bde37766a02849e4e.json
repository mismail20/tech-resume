{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _filter = _interopRequireDefault(require(\"../run/filter\"));\n\nvar _advanceWidthBetween = _interopRequireDefault(require(\"../run/advanceWidthBetween\"));\n/**\r\n * Advance width between start and end\r\n * Does not consider ligature splitting for the moment.\r\n * Check performance impact on supporting this\r\n *\r\n * @param  {number}  start offset\r\n * @param  {number}  end offset\r\n * @param  {Object}  attributedString\r\n * @return {number} advance width\r\n */\n\n\nvar advanceWidthBetween = function advanceWidthBetween(start, end, string) {\n  return R.compose(R.sum, R.map((0, _advanceWidthBetween.default)(start, end)), (0, _filter.default)(start, end), R.propOr([], 'runs'))(string);\n};\n\nvar _default = R.curryN(3, advanceWidthBetween);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}