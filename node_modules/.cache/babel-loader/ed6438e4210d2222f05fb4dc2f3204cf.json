{"ast":null,"code":"import _curry1 from './internal/_curry1.js';\n/**\r\n * Converts an object into an array of key, value arrays. The object's own\r\n * properties and prototype properties are used. Note that the order of the\r\n * output array is not guaranteed to be consistent across different JS\r\n * platforms.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.4.0\r\n * @category Object\r\n * @sig {String: *} -> [[String,*]]\r\n * @param {Object} obj The object to extract from\r\n * @return {Array} An array of key, value arrays from the object's own\r\n *         and prototype properties.\r\n * @example\r\n *\r\n *      const F = function() { this.x = 'X'; };\r\n *      F.prototype.y = 'Y';\r\n *      const f = new F();\r\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\r\n */\n\nvar toPairsIn = /*#__PURE__*/_curry1(function toPairsIn(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n\n  return pairs;\n});\n\nexport default toPairsIn;","map":null,"metadata":{},"sourceType":"module"}