{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\n/**\r\n * Divides the first parameter by the second and returns the remainder. Note\r\n * that this function preserves the JavaScript-style behavior for modulo. For\r\n * mathematical modulo see [`mathMod`](#mathMod).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.1\r\n * @category Math\r\n * @sig Number -> Number -> Number\r\n * @param {Number} a The value to the divide.\r\n * @param {Number} b The pseudo-modulus\r\n * @return {Number} The result of `b % a`.\r\n * @see R.mathMod\r\n * @example\r\n *\r\n *      R.modulo(17, 3); //=> 2\r\n *      // JS behavior:\r\n *      R.modulo(-17, 3); //=> -2\r\n *      R.modulo(17, -3); //=> 2\r\n *\r\n *      const isOdd = R.modulo(R.__, 2);\r\n *      isOdd(42); //=> 0\r\n *      isOdd(21); //=> 1\r\n */\n\nvar modulo = /*#__PURE__*/_curry2(function modulo(a, b) {\n  return a % b;\n});\n\nexport default modulo;","map":null,"metadata":{},"sourceType":"module"}