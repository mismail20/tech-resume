{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\nimport keys from './keys.js';\n/**\r\n * Iterate over an input `object`, calling a provided function `fn` for each\r\n * key and value in the object.\r\n *\r\n * `fn` receives three argument: *(value, key, obj)*.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.23.0\r\n * @category Object\r\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\r\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\r\n * @param {Object} obj The object to iterate over.\r\n * @return {Object} The original object.\r\n * @example\r\n *\r\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\r\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\r\n *      // logs x:1\r\n *      // logs y:2\r\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\r\n */\n\nvar forEachObjIndexed = /*#__PURE__*/_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n});\n\nexport default forEachObjIndexed;","map":null,"metadata":{},"sourceType":"module"}