{"ast":null,"code":"import _curry1 from './_curry1.js';\nimport _isArray from './_isArray.js';\nimport _isString from './_isString.js';\n/**\r\n * Tests whether or not an object is similar to an array.\r\n *\r\n * @private\r\n * @category Type\r\n * @category List\r\n * @sig * -> Boolean\r\n * @param {*} x The object to test.\r\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\r\n * @example\r\n *\r\n *      _isArrayLike([]); //=> true\r\n *      _isArrayLike(true); //=> false\r\n *      _isArrayLike({}); //=> false\r\n *      _isArrayLike({length: 10}); //=> false\r\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\r\n */\n\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;","map":null,"metadata":{},"sourceType":"module"}