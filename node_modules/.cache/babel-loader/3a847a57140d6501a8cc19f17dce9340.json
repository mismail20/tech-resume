{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindIndex from './internal/_xfindIndex.js';\n/**\r\n * Returns the index of the first element of the list which matches the\r\n * predicate, or `-1` if no element matches.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.1\r\n * @category List\r\n * @sig (a -> Boolean) -> [a] -> Number\r\n * @param {Function} fn The predicate function used to determine if the element is the\r\n * desired one.\r\n * @param {Array} list The array to consider.\r\n * @return {Number} The index of the element found, or `-1`.\r\n * @see R.transduce\r\n * @example\r\n *\r\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\r\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\r\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\r\n */\n\nvar findIndex = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}));\n\nexport default findIndex;","map":null,"metadata":{},"sourceType":"module"}