{"ast":null,"code":"import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport filter from './filter.js';\n/**\r\n * The complement of [`filter`](#filter).\r\n *\r\n * Acts as a transducer if a transformer is given in list position. Filterable\r\n * objects include plain objects or any object that has a filter method such\r\n * as `Array`.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\r\n * @param {Function} pred\r\n * @param {Array} filterable\r\n * @return {Array}\r\n * @see R.filter, R.transduce, R.addIndex\r\n * @example\r\n *\r\n *      const isOdd = (n) => n % 2 === 1;\r\n *\r\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\r\n *\r\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\r\n */\n\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;","map":null,"metadata":{},"sourceType":"module"}