{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xall from './internal/_xall.js';\n/**\r\n * Returns `true` if all elements of the list match the predicate, `false` if\r\n * there are any that don't.\r\n *\r\n * Dispatches to the `all` method of the second argument, if present.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig (a -> Boolean) -> [a] -> Boolean\r\n * @param {Function} fn The predicate function.\r\n * @param {Array} list The array to consider.\r\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\r\n *         otherwise.\r\n * @see R.any, R.none, R.transduce\r\n * @example\r\n *\r\n *      const equals3 = R.equals(3);\r\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\r\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\r\n */\n\nvar all = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));\n\nexport default all;","map":null,"metadata":{},"sourceType":"module"}