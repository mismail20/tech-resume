{"ast":null,"code":"import _curry1 from './internal/_curry1.js';\n/**\r\n * Transposes the rows and columns of a 2D list.\r\n * When passed a list of `n` lists of length `x`,\r\n * returns a list of `x` lists of length `n`.\r\n *\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.19.0\r\n * @category List\r\n * @sig [[a]] -> [[a]]\r\n * @param {Array} list A 2D list\r\n * @return {Array} A 2D list\r\n * @example\r\n *\r\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\r\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\r\n *\r\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\r\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\r\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\r\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\r\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\r\n */\n\nvar transpose = /*#__PURE__*/_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n\n    i += 1;\n  }\n\n  return result;\n});\n\nexport default transpose;","map":null,"metadata":{},"sourceType":"module"}