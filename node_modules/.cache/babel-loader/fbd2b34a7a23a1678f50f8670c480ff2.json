{"ast":null,"code":"import _curry2 from './internal/_curry2.js'; // `Const` is a functor that effectively ignores the function given to `map`.\n\nvar Const = function Const(x) {\n  return {\n    value: x,\n    'fantasy-land/map': function fantasyLandMap() {\n      return this;\n    }\n  };\n};\n/**\r\n * Returns a \"view\" of the given data structure, determined by the given lens.\r\n * The lens's focus determines which portion of the data structure is visible.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.16.0\r\n * @category Object\r\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\r\n * @sig Lens s a -> s -> a\r\n * @param {Lens} lens\r\n * @param {*} x\r\n * @return {*}\r\n * @see R.prop, R.lensIndex, R.lensProp\r\n * @example\r\n *\r\n *      const xLens = R.lensProp('x');\r\n *\r\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\r\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\r\n */\n\n\nvar view = /*#__PURE__*/_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\n\nexport default view;","map":null,"metadata":{},"sourceType":"module"}