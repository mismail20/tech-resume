{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdrop from './internal/_xdrop.js';\nimport slice from './slice.js';\n/**\r\n * Returns all but the first `n` elements of the given list, string, or\r\n * transducer/transformer (or object with a `drop` method).\r\n *\r\n * Dispatches to the `drop` method of the second argument, if present.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Number -> [a] -> [a]\r\n * @sig Number -> String -> String\r\n * @param {Number} n\r\n * @param {*} list\r\n * @return {*} A copy of list without the first `n` elements\r\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\r\n * @example\r\n *\r\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\r\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\r\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\r\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\r\n *      R.drop(3, 'ramda');               //=> 'da'\r\n */\n\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nexport default drop;","map":null,"metadata":{},"sourceType":"module"}