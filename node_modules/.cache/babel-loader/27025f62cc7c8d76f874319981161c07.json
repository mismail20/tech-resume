{"ast":null,"code":"import _Set from './internal/_Set.js';\nimport _curry2 from './internal/_curry2.js';\n/**\r\n * Returns a new list containing only one copy of each element in the original\r\n * list, based upon the value returned by applying the supplied function to\r\n * each list element. Prefers the first item if the supplied function produces\r\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.16.0\r\n * @category List\r\n * @sig (a -> b) -> [a] -> [a]\r\n * @param {Function} fn A function used to produce a value to use during comparisons.\r\n * @param {Array} list The array to consider.\r\n * @return {Array} The list of unique items.\r\n * @example\r\n *\r\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\r\n */\n\nvar uniqBy = /*#__PURE__*/_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default uniqBy;","map":null,"metadata":{},"sourceType":"module"}