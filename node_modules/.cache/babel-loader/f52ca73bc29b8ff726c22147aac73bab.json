{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n/**\r\n * Prepend glyph indices with given length\r\n *\r\n * Ex. prepend(3, [0, 1, 2, 2]) => [0, 0, 0, 1, 2, 3, 3]\r\n *\r\n * @param  {number}  length\r\n * @param  {Array}  glyph indices\r\n * @return {Array}  extended glyph indices\r\n */\n\n\nvar prepend = function prepend(length, indices) {\n  if (length === 0) return indices;\n  return R.converge(R.concat, [R.converge(R.repeat, [R.always(0), R.always(length)]), R.map(R.inc)])(indices);\n};\n\nvar _default = R.curryN(2, prepend);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}