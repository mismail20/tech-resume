{"ast":null,"code":"import _arity from './internal/_arity.js';\nimport _pipeP from './internal/_pipeP.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n/**\r\n * Performs left-to-right composition of one or more Promise-returning\r\n * functions. The leftmost function may have any arity; the remaining functions\r\n * must be unary.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.10.0\r\n * @category Function\r\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\r\n * @param {...Function} functions\r\n * @return {Function}\r\n * @see R.composeP\r\n * @deprecated since v0.26.0\r\n * @example\r\n *\r\n *      //  followersForUser :: String -> Promise [User]\r\n *      const followersForUser = R.pipeP(db.getUserById, db.getFollowers);\r\n */\n\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","map":null,"metadata":{},"sourceType":"module"}