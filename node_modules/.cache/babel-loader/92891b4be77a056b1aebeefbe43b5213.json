{"ast":null,"code":"import _curry3 from './internal/_curry3.js';\n/**\r\n * Makes an ascending comparator function out of a function that returns a value\r\n * that can be compared with `<` and `>`.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.23.0\r\n * @category Function\r\n * @sig Ord b => (a -> b) -> a -> a -> Number\r\n * @param {Function} fn A function of arity one that returns a value that can be compared\r\n * @param {*} a The first item to be compared.\r\n * @param {*} b The second item to be compared.\r\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\r\n * @see R.descend\r\n * @example\r\n *\r\n *      const byAge = R.ascend(R.prop('age'));\r\n *      const people = [\r\n *        { name: 'Emma', age: 70 },\r\n *        { name: 'Peter', age: 78 },\r\n *        { name: 'Mikhail', age: 62 },\r\n *      ];\r\n *      const peopleByYoungestFirst = R.sort(byAge, people);\r\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\r\n */\n\nvar ascend = /*#__PURE__*/_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\nexport default ascend;","map":null,"metadata":{},"sourceType":"module"}