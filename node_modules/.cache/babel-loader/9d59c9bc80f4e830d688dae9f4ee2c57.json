{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar _wrapWords = _interopRequireDefault(require(\"./wrapWords\"));\n\nvar _typesetter = _interopRequireDefault(require(\"./typesetter\"));\n\nvar _generateGlyphs = _interopRequireDefault(require(\"./generateGlyphs\"));\n\nvar _resolveYOffset = _interopRequireDefault(require(\"./resolveYOffset\"));\n\nvar _preprocessRuns = _interopRequireDefault(require(\"./preprocessRuns\"));\n\nvar _splitParagraphs = _interopRequireDefault(require(\"./splitParagraphs\"));\n\nvar _finalizeFragments = _interopRequireDefault(require(\"./finalizeFragments\"));\n\nvar _resolveAttachments = _interopRequireDefault(require(\"./resolveAttachments\"));\n\nvar _applyDefaultStyles = _interopRequireDefault(require(\"./applyDefaultStyles\"));\n/**\r\n * A LayoutEngine is the main object that performs text layout.\r\n * It accepts an AttributedString and a Container object\r\n * to layout text into, and uses several helper objects to perform\r\n * various layout tasks. These objects can be overridden to customize\r\n * layout behavior.\r\n *\r\n * @param  {Object}  engines\r\n * @param  {Object}  attributed string\r\n * @param  {Object}  container rect\r\n * @param  {Object}  layout options\r\n * @return {Array} paragraph blocks\r\n */\n\n\nvar layoutEngine = function layoutEngine(engines, attributedString, container, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var processParagraphs = R.compose((0, _resolveYOffset.default)(engines, options), (0, _resolveAttachments.default)(engines, options), (0, _generateGlyphs.default)(engines, options), (0, _wrapWords.default)(engines, options));\n  return R.compose((0, _finalizeFragments.default)(engines, options), (0, _typesetter.default)(engines, options, container), R.map(processParagraphs), (0, _splitParagraphs.default)(engines, options), (0, _preprocessRuns.default)(engines, options), (0, _applyDefaultStyles.default)(engines, options))(attributedString);\n};\n\nvar _default = R.curryN(3, layoutEngine);\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}