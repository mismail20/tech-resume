{"ast":null,"code":"import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n/**\r\n * Returns `true` if the specified object property is equal, in\r\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\r\n * You can test multiple properties with [`R.whereEq`](#whereEq).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category Relation\r\n * @sig String -> a -> Object -> Boolean\r\n * @param {String} name\r\n * @param {*} val\r\n * @param {*} obj\r\n * @return {Boolean}\r\n * @see R.whereEq, R.propSatisfies, R.equals\r\n * @example\r\n *\r\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\r\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\r\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\r\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\r\n *      const kids = [abby, fred, rusty, alois];\r\n *      const hasBrownHair = R.propEq('hair', 'brown');\r\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\r\n */\n\nvar propEq = /*#__PURE__*/_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\n\nexport default propEq;","map":null,"metadata":{},"sourceType":"module"}