{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport keys from './keys.js';\n/**\r\n * An Object-specific version of [`map`](#map). The function is applied to three\r\n * arguments: *(value, key, obj)*. If only the value is significant, use\r\n * [`map`](#map) instead.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.9.0\r\n * @category Object\r\n * @sig ((*, String, Object) -> *) -> Object -> Object\r\n * @param {Function} fn\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @see R.map\r\n * @example\r\n *\r\n *      const xyz = { x: 1, y: 2, z: 3 };\r\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\r\n *\r\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\r\n */\n\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nexport default mapObjIndexed;","map":null,"metadata":{},"sourceType":"module"}