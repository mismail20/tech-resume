{"ast":null,"code":"import _curry1 from './internal/_curry1.js';\n/**\r\n * Returns a function that always returns the given value. Note that for\r\n * non-primitives the value returned is a reference to the original value.\r\n *\r\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\r\n * other languages and libraries.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category Function\r\n * @sig a -> (* -> a)\r\n * @param {*} val The value to wrap in a function\r\n * @return {Function} A Function :: * -> val.\r\n * @example\r\n *\r\n *      const t = R.always('Tee');\r\n *      t(); //=> 'Tee'\r\n */\n\nvar always = /*#__PURE__*/_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nexport default always;","map":null,"metadata":{},"sourceType":"module"}