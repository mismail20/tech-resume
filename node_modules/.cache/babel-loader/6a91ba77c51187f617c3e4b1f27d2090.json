{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar R = _interopRequireWildcard(require(\"ramda\"));\n\nvar P = _interopRequireWildcard(require(\"@react-pdf/primitives\"));\n\nvar _stylesheet = _interopRequireDefault(require(\"@react-pdf/stylesheet\"));\n\nvar isLink = R.propEq('type', P.Link);\nvar LINK_STYLES = {\n  color: 'blue',\n  textDecoration: 'underline'\n};\n/**\r\n * Resolves node styles\r\n *\r\n * @param {Object} container\r\n * @param {Object} document node\r\n * @returns {Object} node (and subnodes) with resolved styles\r\n */\n\nvar resolveNodeStyles = function resolveNodeStyles(container) {\n  return function (node) {\n    return R.o(R.when(isLink, R.evolve({\n      style: R.merge(LINK_STYLES)\n    })), R.evolve({\n      style: (0, _stylesheet.default)(container),\n      children: R.map(resolveNodeStyles(container))\n    }))(node);\n  };\n};\n/**\r\n * Resolves page styles\r\n *\r\n * @param {Object} document page\r\n * @returns {Object} document page with resolved styles\r\n */\n\n\nvar resolvePageStyles = function resolvePageStyles(page) {\n  var box = R.prop('box', page);\n  var style = R.prop('style', page);\n  var container = R.isEmpty(box) ? style : box;\n  return R.evolve({\n    style: (0, _stylesheet.default)(container),\n    children: R.map(resolveNodeStyles(container))\n  })(page);\n};\n/**\r\n * Resolves document styles\r\n *\r\n * @param {Object} document root\r\n * @returns {Object} document root with resolved styles\r\n */\n\n\nvar _default = R.evolve({\n  children: R.map(resolvePageStyles)\n});\n\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}