{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\nimport _isNumber from './internal/_isNumber.js';\n/**\r\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig Number -> Number -> [Number]\r\n * @param {Number} from The first number in the list.\r\n * @param {Number} to One more than the last number in the list.\r\n * @return {Array} The list of numbers in the set `[a, b)`.\r\n * @example\r\n *\r\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\r\n *      R.range(50, 53);  //=> [50, 51, 52]\r\n */\n\nvar range = /*#__PURE__*/_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});\n\nexport default range;","map":null,"metadata":{},"sourceType":"module"}