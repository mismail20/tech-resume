{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\n/**\r\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\r\n * order.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category Object\r\n * @sig [k] -> {k: v} -> [v]\r\n * @param {Array} ps The property names to fetch\r\n * @param {Object} obj The object to query\r\n * @return {Array} The corresponding values or partially applied function.\r\n * @example\r\n *\r\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\r\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\r\n *\r\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\r\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\r\n */\n\nvar props = /*#__PURE__*/_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default props;","map":null,"metadata":{},"sourceType":"module"}