{"ast":null,"code":"import _curry3 from './internal/_curry3.js';\n/**\r\n * Move an item, at index `from`, to index `to`, in a list of elements.\r\n * A new list will be created containing the new elements order.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @category List\r\n * @sig Number -> Number -> [a] -> [a]\r\n * @param {Number} from The source index\r\n * @param {Number} to The destination index\r\n * @param {Array} list The list which will serve to realise the move\r\n * @return {Array} The new list reordered\r\n * @example\r\n *\r\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\r\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\r\n */\n\nvar move = /*#__PURE__*/_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;","map":null,"metadata":{},"sourceType":"module"}