{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfind from './internal/_xfind.js';\n/**\r\n * Returns the first element of the list which matches the predicate, or\r\n * `undefined` if no element matches.\r\n *\r\n * Dispatches to the `find` method of the second argument, if present.\r\n *\r\n * Acts as a transducer if a transformer is given in list position.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig (a -> Boolean) -> [a] -> a | undefined\r\n * @param {Function} fn The predicate function used to determine if the element is the\r\n *        desired one.\r\n * @param {Array} list The array to consider.\r\n * @return {Object} The element found, or `undefined`.\r\n * @see R.transduce\r\n * @example\r\n *\r\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\r\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\r\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\r\n */\n\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nexport default find;","map":null,"metadata":{},"sourceType":"module"}