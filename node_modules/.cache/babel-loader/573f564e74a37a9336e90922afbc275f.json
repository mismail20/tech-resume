{"ast":null,"code":"import _curry1 from './internal/_curry1.js';\n/**\r\n * Gives a single-word string description of the (native) type of a value,\r\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\r\n * attempt to distinguish user Object types any further, reporting them all as\r\n * 'Object'.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.8.0\r\n * @category Type\r\n * @sig (* -> {*}) -> String\r\n * @param {*} val The value to test\r\n * @return {String}\r\n * @example\r\n *\r\n *      R.type({}); //=> \"Object\"\r\n *      R.type(1); //=> \"Number\"\r\n *      R.type(false); //=> \"Boolean\"\r\n *      R.type('s'); //=> \"String\"\r\n *      R.type(null); //=> \"Null\"\r\n *      R.type([]); //=> \"Array\"\r\n *      R.type(/[A-z]/); //=> \"RegExp\"\r\n *      R.type(() => {}); //=> \"Function\"\r\n *      R.type(undefined); //=> \"Undefined\"\r\n */\n\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","map":null,"metadata":{},"sourceType":"module"}