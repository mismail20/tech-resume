{"ast":null,"code":"import _curry1 from './internal/_curry1.js';\nimport keys from './keys.js';\n/**\r\n * Returns a new object with the keys of the given object as values, and the\r\n * values of the given object, which are coerced to strings, as keys. Note\r\n * that the last key found is preferred when handling the same value.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.9.0\r\n * @category Object\r\n * @sig {s: x} -> {x: s}\r\n * @param {Object} obj The object or array to invert\r\n * @return {Object} out A new object\r\n * @see R.invert\r\n * @example\r\n *\r\n *      const raceResults = {\r\n *        first: 'alice',\r\n *        second: 'jake'\r\n *      };\r\n *      R.invertObj(raceResults);\r\n *      //=> { 'alice': 'first', 'jake':'second' }\r\n *\r\n *      // Alternatively:\r\n *      const raceResults = ['alice', 'jake'];\r\n *      R.invertObj(raceResults);\r\n *      //=> { 'alice': '0', 'jake':'1' }\r\n */\n\nvar invertObj = /*#__PURE__*/_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invertObj;","map":null,"metadata":{},"sourceType":"module"}