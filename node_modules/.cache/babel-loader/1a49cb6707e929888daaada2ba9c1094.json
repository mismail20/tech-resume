{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\n/**\r\n * Creates a new list out of the two supplied by creating each possible pair\r\n * from the lists.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.1.0\r\n * @category List\r\n * @sig [a] -> [b] -> [[a,b]]\r\n * @param {Array} as The first list.\r\n * @param {Array} bs The second list.\r\n * @return {Array} The list made by combining each possible pair from\r\n *         `as` and `bs` into pairs (`[a, b]`).\r\n * @example\r\n *\r\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\r\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\r\n */\n\nvar xprod = /*#__PURE__*/_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n\n  while (idx < ilen) {\n    j = 0;\n\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default xprod;","map":null,"metadata":{},"sourceType":"module"}