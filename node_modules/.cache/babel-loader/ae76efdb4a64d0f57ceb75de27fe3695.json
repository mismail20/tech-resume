{"ast":null,"code":"import _curry2 from './internal/_curry2.js';\n/**\r\n * Sorts a list according to a list of comparators.\r\n *\r\n * @func\r\n * @memberOf R\r\n * @since v0.23.0\r\n * @category Relation\r\n * @sig [(a, a) -> Number] -> [a] -> [a]\r\n * @param {Array} functions A list of comparator functions.\r\n * @param {Array} list The list to sort.\r\n * @return {Array} A new list sorted according to the comarator functions.\r\n * @example\r\n *\r\n *      const alice = {\r\n *        name: 'alice',\r\n *        age: 40\r\n *      };\r\n *      const bob = {\r\n *        name: 'bob',\r\n *        age: 30\r\n *      };\r\n *      const clara = {\r\n *        name: 'clara',\r\n *        age: 40\r\n *      };\r\n *      const people = [clara, bob, alice];\r\n *      const ageNameSort = R.sortWith([\r\n *        R.descend(R.prop('age')),\r\n *        R.ascend(R.prop('name'))\r\n *      ]);\r\n *      ageNameSort(people); //=> [alice, clara, bob]\r\n */\n\nvar sortWith = /*#__PURE__*/_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n\n    return result;\n  });\n});\n\nexport default sortWith;","map":null,"metadata":{},"sourceType":"module"}